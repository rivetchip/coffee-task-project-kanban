-- MySQL Script generated by MySQL Workbench
-- Mon Oct  2 11:58:37 2017
-- Model: KanbanModel    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema kanban
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema kanban
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `kanban` DEFAULT CHARACTER SET utf8 ;
USE `kanban` ;

-- -----------------------------------------------------
-- Table `kanban`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kanban`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `fullname` TEXT NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `password` VARCHAR(150) NOT NULL,
  `last_login` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `kanban`.`projects`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kanban`.`projects` (
  `id` INT NOT NULL,
  `linked_admin` INT NOT NULL,
  `linked_manager` INT NOT NULL,
  `title` TEXT NULL,
  `description` TEXT NULL,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `is_deleted` TINYINT NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`, `linked_admin`, `linked_manager`),
  INDEX `fk_projects_users1_idx` (`linked_admin` ASC),
  INDEX `fk_projects_users2_idx` (`linked_manager` ASC),
  CONSTRAINT `fk_projects_users1`
    FOREIGN KEY (`linked_admin`)
    REFERENCES `kanban`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_projects_users2`
    FOREIGN KEY (`linked_manager`)
    REFERENCES `kanban`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kanban`.`categories`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kanban`.`categories` (
  `id` INT NOT NULL,
  `project_id` INT NOT NULL,
  `title` TEXT NULL,
  `color` VARCHAR(45) NULL,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `is_deleted` TINYINT NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`, `project_id`),
  INDEX `fk_categories_projects1_idx` (`project_id` ASC),
  CONSTRAINT `fk_categories_projects1`
    FOREIGN KEY (`project_id`)
    REFERENCES `kanban`.`projects` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kanban`.`importance`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kanban`.`importance` (
  `id` INT NOT NULL,
  `title` TEXT NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kanban`.`tasks`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kanban`.`tasks` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` TEXT NULL,
  `description` TEXT NULL,
  `assigned_to` INT NOT NULL,
  `category_id` INT NOT NULL,
  `importance` INT NOT NULL,
  `end_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `completed_at` DATETIME NULL,
  `deleted_at` DATETIME NULL,
  `is_deleted` TINYINT NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`, `assigned_to`, `category_id`, `importance`),
  INDEX `fk_tasks_users1_idx` (`assigned_to` ASC),
  INDEX `fk_tasks_categories1_idx` (`category_id` ASC),
  INDEX `fk_tasks_importance1_idx` (`importance` ASC),
  CONSTRAINT `fk_tasks_users1`
    FOREIGN KEY (`assigned_to`)
    REFERENCES `kanban`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tasks_categories1`
    FOREIGN KEY (`category_id`)
    REFERENCES `kanban`.`categories` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tasks_importance1`
    FOREIGN KEY (`importance`)
    REFERENCES `kanban`.`importance` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kanban`.`users_has_projects`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kanban`.`users_has_projects` (
  `id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `project_id` INT NOT NULL,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `is_deleted` TINYINT NOT NULL DEFAULT 0,
  PRIMARY KEY (`user_id`, `project_id`, `id`),
  INDEX `fk_users_has_projects_projects1_idx` (`project_id` ASC),
  INDEX `fk_users_has_projects_users_idx` (`user_id` ASC),
  CONSTRAINT `fk_users_has_projects_users`
    FOREIGN KEY (`user_id`)
    REFERENCES `kanban`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_has_projects_projects1`
    FOREIGN KEY (`project_id`)
    REFERENCES `kanban`.`projects` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `kanban`.`files`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kanban`.`files` (
  `id` INT NOT NULL,
  `task_id` INT NOT NULL,
  `title` TEXT NOT NULL,
  `filename` VARCHAR(45) NOT NULL,
  `size` INT NULL DEFAULT 0,
  `mimetype` VARCHAR(45) NULL,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `is_deleted` TINYINT NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`, `task_id`),
  INDEX `fk_files_tasks1_idx` (`task_id` ASC),
  CONSTRAINT `fk_files_tasks1`
    FOREIGN KEY (`task_id`)
    REFERENCES `kanban`.`tasks` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kanban`.`preferences`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kanban`.`preferences` (
  `id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `tasks_filter` INT NOT NULL DEFAULT 0,
  `notifications_tasks_limit` INT NULL DEFAULT 0,
  PRIMARY KEY (`id`, `user_id`),
  INDEX `fk_preferences_users1_idx` (`user_id` ASC),
  CONSTRAINT `fk_preferences_users1`
    FOREIGN KEY (`user_id`)
    REFERENCES `kanban`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
